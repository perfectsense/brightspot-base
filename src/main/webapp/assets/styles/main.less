/**
* ===================
* IMPORTANT READ THIS
* ===================
*
* By default, main is by default configured to pull in all the base LESS.
* Many projects will not need all of these libraries, so please optimize by commenting out what you do not use.
* Your LESS for your project goes at the bottom of this file, including any custom project variables, elements, mixins and components
/*


/**
* Mixins
* ---------------------------------------------------------------
* Leaving these in a separate folder for now. Will figure out if we move thes around
* but either way they will be brought in and can be used throughout
* Mixins are prefaced with the private _ so they stay out ouf our automated LESS documentation
* ---------------------------------------------------------------
*/
@import (reference) "base/mixins/_mixins.less";


/**
* Globals, utilities, mixins, vars
* ---------------------------------------------------------------
* Start off with the normalize reset and our scaffolding, then the rest of our globals. Each has their own documentation
* ---------------------------------------------------------------
*/
@import "base/globals/normalize.less";
@import "base/globals/scaffolding.less";
@import "base/globals/borders.vars";
@import "base/globals/colors.vars";
@import "base/globals/grid.less";
@import "base/globals/grid.vars";
@import "base/globals/modal.less";
@import "base/globals/spacing.vars";
@import "base/globals/typography.less";
@import "base/globals/typography.vars";
@import "base/globals/utilities-basic.less";
@import "base/globals/utilities-responsive.less";
@import "base/globals/z-index.vars";


/**
* Bowered CSS.
* ---------------------------------------------------------------
* This is for plugins that we bowered in that have their own CSS
* ---------------------------------------------------------------
*/
@import (inline) "bower/bsp-carousel/bsp-carousel.css";
@import (inline) "bower/bsp-modal/bsp-modal.css";

/**
* Elements
* ---------------------------------------------------------------
* These are elements. Some of these correspond to DOM elements, others are small building blocks that components or parts of components can extend
* The primary difference is that elements do not have a component class wrapper and they are primarily used inside components, meaning that very
* rarely will you see an element just stand alone inside a page layout without being represented inside a component
* ---------------------------------------------------------------
*/
@import "base/elements/buttons.less";
@import "base/elements/icons.less";
@import "base/elements/images.less";
@import "base/elements/lists.less";
@import "base/elements/loading-icons.less";
@import "base/elements/meta-data.less";
@import "base/elements/share-links.less";
@import "base/elements/tags.less";
@import "base/elements/titles.less";


/**
* Components
* ---------------------------------------------------------------
* Components are synonymous with "modules" and are site components that are surrounded by a component wrapper in most cases. They can containe
* other components and elements and have spacing relationships between each other (if wrapper is present)
* ---------------------------------------------------------------
*/
@import "base/components/article.less";
@import "base/components/blockquote.less";
@import "base/components/component.less";
@import "base/components/component.vars";
@import "base/components/site-footer-simple.less";
@import "base/components/site-footer-simple.vars";
@import "base/components/site-header-simple.less";
@import "base/components/site-header-simple.vars";
// The gallery module component goes last. It potentially has other components inside of it, so this lets us do some clean overrides
@import "base/components/gallery-module.less";
@import "base/components/gallery-module.vars";


/**
* ===================
* Your Project CSS Goes Below Here
* ===================
*/

