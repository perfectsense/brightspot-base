// The standard list promo contains an optional title, a list of links and a bottom call to action. 
// It scales up to the size of it's container and accepts any number of items. 
// If there is a certain height restriction that is part of the design, we should enforce that with character counts and 
// number of items in the list vs hardcoded CSS rules as much as possible

.bsp-list-promo {
	//margin: -@space 0; // other modules need to get space between the title. The list promo needs to cancel that out, as the list items are supposed to butt up to the title and CTA
	text-transform: uppercase;

	// when we have hardcoded heights, we do not want the bottom negative margin, it screws up our centering
	.hard-item-heights & {
		margin-bottom: 0;
	}
}



.bsp-list-promo-list {

	li {
		&:extend(.clearfix all);

		border-top: @border-style-5;
		padding: 0 @space; 
		position: relative;

		// first item has no border or padding, and default has no image, so it's scooted up to the title
		&:first-child {
			border-top: none;
			margin-top: -@space; // if you are the first item, margin you up to the header
			padding-top: 0 !important;
		}

		// if there is an image at the top or you have the dark background for left align, give it padding and a normal margin away
		&.image-align-top, &.image-align-left-dark {
			padding-top: @space;
			margin-top: 0;
		}

		// if there is an image to the left, give it padding
		&.image-align-left {
			margin-top: 0;
		}
		
	}
	
}



// images have no margin on either side
.bsp-list-promo-image {
	margin: 0 -@space; 

	// if you have a title and an image, give that top margin to space it. Otherwise, it's flush to the top of the component
	// .bsp-component-title + .bsp-component-content .bsp-list-promo & {
	// 	margin-top: @space;
	// }

	.image-align-left &, .image-align-left-dark & {
		float: left;
		width: 45%;
	}

	img {
		width: 100%;
	}
}


.bsp-list-promo-text {

	// when we are overlayed, provide the background and positioning/padding
	.image-align-overlay & {
		background: rgba(0,0,0,0.5);
		bottom: 0;
		color: @white;
		left: 0;
		padding: 0 @space @space;
		position: absolute;
		right: 0;
	}

	.image-align-left &, .image-align-left-dark & {
		background: @brand-dark;
		color: @white;
		margin-left: -@space; // butts it up against the image
		padding: 0 @space;
		position: absolute;
		right: 0;
		top: 0;
		bottom: 0;
		left: 45%;
	}

	.image-align-left & {
		background: none;
		color: @text-color;
		margin-top: -1rem;
	}

}


.bsp-list-promo-title {
	&:extend(.ts-1);

	margin: @space 0;

	a {
		color: @text-color;

		// since the image overlay is dark, this needs to be white not text-color
		.image-align-overlay & {
			color: @white;
		}

		.image-align-left-dark & {
			color: @white;
		}
	}
}

.bsp-list-promo-link {
	margin: @space 0;

	a {
		display: block;
	}

	.image-align-left-dark & {
		
		a {
			background: @brand-primary;
			bottom: 0;
			color: @brand-dark;
			left: 0;
			position: absolute;
			right: 0;
			text-align: center;
			padding: @space-quarter 0;
		}
	}

}



.bsp-list-promo-desc {
	margin: @space 0;
	text-transform: none;
}



// when we hardcode items heights, we will hardcode the height here and vertically center the links
// this is at the end of the less file so we can provide cascading overrides without important tags
.bsp-list-promo-list.hard-item-heights {
	margin-top: -@space;

	.bsp-list-promo-text {
		height: 60px;

		&:extend(.vertical-center-wrapper all);

		.bsp-list-promo-link {
			&:extend(.vertical-center all);
			margin: 0;
		}
	}

}