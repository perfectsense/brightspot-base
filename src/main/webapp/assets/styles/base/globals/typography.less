@import 'typography.vars';

// Typography elements include our type scale classes (which can be extended or mixed into our LESS)
// We purposely do not have the h elements defined here, as we should be using class names to style those
// to make them easier to identify and change

// these are used for regular elements with a regular standard line height
.ts-neg-2 {
    .type-scale(-2);
}
.ts-neg-1 {
    .type-scale(-1);
}
.ts-0 {
    .type-scale(0);
}
.ts-1 {
    .type-scale(1);
}
.ts-2 {
    .type-scale(2);
}
.ts-3 {
    .type-scale(3);
}
.ts-4 {
    .type-scale(4);
}

// header elements, since they are usually just one line have a tighter line height. This rule allows us to
// use extending vs calling the mixin on each header type element each time
.ts-heading-1 {
	.type-scale(3, @weight: @font-weight-light, @lh: @line-height-headings);
}
.ts-heading-2 {
	.type-scale(2, @weight: @font-weight-light, @lh: @line-height-headings);
}
.ts-heading-3 {
	.type-scale(1, @weight: @font-weight-light, @lh: @line-height-headings);
}
.ts-heading-4 {
    .type-scale(0, @weight: @font-weight-light, @lh: @line-height-headings);
}

@media @mq-sm {
    .ts-heading-1 {
        .type-scale(4, @weight: @font-weight-light, @lh: @line-height-headings);
    }
    .ts-heading-2 {
        .type-scale(3, @weight: @font-weight-light, @lh: @line-height-headings);
    }
    .ts-heading-3 {
        .type-scale(2, @weight: @font-weight-light, @lh: @line-height-headings);
    }
    .ts-heading-4 {
        .type-scale(1, @weight: @font-weight-light, @lh: @line-height-headings);
    }
}

// Helper classes for special looks/feels in accordance with the brand colors
// This are for special text treatments inside of promos, articles, callouts, etc
// These can be used directly into the HTML
.text-brand-primary {
    color: @color-brand-primary;
}

.text-brand-secondary {
    color: @color-brand-secondary;
}

.text-brand-accent {
    color: @color-brand-accent;
}
