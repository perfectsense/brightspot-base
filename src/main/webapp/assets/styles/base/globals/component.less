// padding vs margin allows for cleaner separation between components, especially if things inside of them use margins
.component {
    padding: @space-component-bottom/2 0;
    position: relative;

    // if we have components inside of each other. No margin on the inside ones
    .component {
        padding: 0;
    }
}

.component-inverse-color {
    background: @color-component-inverse-background;
    color: @color-component-inverse-text;

    // if we inverse a whole component group vs just a component, do not add the extra padding to it
    &.component-group {
        margin: 0;
        padding: 0;
    }

    // if we have components inside of an inverse color one, no padding either
    .component {
        margin: 0;
        padding: 0;
    }
}

.component-secondary-color {
    background: @color-component-secondary-background;

    // if we secondary a whole component group vs just a component, do not add the extra padding to it
    &.component-group {
        margin: 0;
        padding: 0;
    }

    // if we have components inside of an secondary color one, no padding either
    .component {
        margin: 0;
        padding: 0;
    }
}

.component-title {
    &:extend(.section-title);
    text-align: center;

    a {
        color: @color-text;
    }
}

.component-subtitle {
    display: block;
    font-size: @ts-0;
    line-height: @line-height-base;
    margin-top: @space;
}

.component-content {
    overflow: hidden; // making sure things do not go outside of components
}

.component-cta {
    border-top: @border-style-9;
    padding-top: @space;
    text-align: center;

    a {
        display: block;
        font-weight: @font-weight-bold;
        padding: @space-quarter 0;
        text-transform: uppercase;

        .icon();

        &:after {
            content: @fa-var-angle-right;
        }
    }

    &.component-cta-top-right {
        position: absolute;
        top: 0;
        right: 0;

        a {
            padding-right: @space;
        }
    }

    &.component-cta-bottom-right {
        display: inline-block;
        float: right;

        a {
            padding-right: @space;
        }
    }

    &.component-cta-bottom-left {
        display: inline-block;
        float: left;

        a {
            padding-right: @space;
        }
    }

    // if we are load more, we look like a tag
    &.load-more {
        a {
            padding: @space-double !important; // the element we are extending comes in after globals for specificity
            &:extend(.tag all);

            &:after {
                content: '';
            }
        }
    }
}

// if the content has hard item heights, there is no margin on the cta, it will screw up the hardcoded item heights
.component-content.hard-item-heights + .component-cta {
    margin-top: 0;
}


@media @mq-sm {
    .component {
        padding: @space-component-bottom 0;
    }

    .component-cta {
        border-top: none;
        padding-top: 0;
    }
}
